---
Parameters:
  SSHLocation:
    Description: " The IP address range that can be used to SSH to the EC2 instances"
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  SSHKey:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
  
Resources:
  MatetrMostVPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: 10.1.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: MatetrMostVPC

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: us-east-1a
      CidrBlock: 10.1.1.0/24
      MapPublicIpOnLaunch: true
      Tags: 
      - Key: Name
        Value: PublicSubnet
      VpcId: !Ref MatetrMostVPC

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: us-east-1a
      CidrBlock: 10.1.2.0/24
      MapPublicIpOnLaunch: false
      Tags: 
      - Key: Name
        Value: PrivateSubnet
      VpcId: !Ref MatetrMostVPC
  
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: MatetrMostVPC
      Tags:
      - Key: Name
        Value: PublicRouteTable 

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: MatetrMostVPC
      Tags:
      - Key: Name
        Value: PrivateRouteTable

  SubnetAssociationPublic:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet
  
  SubnetAssociationPrivate:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet
  
  DemoIGW:
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags: 
        - Key: Name
          Value: DemoIGW

  DemoIGWVPCAttachMent:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref DemoIGW
      VpcId: !Ref MatetrMostVPC

  NatGatewayEIP:
    Type: AWS::EC2::EIP
    DependsOn: DemoIGWVPCAttachMent
    Properties:
      Domain: vpc
      Tags:
      - Key: Name
        Value: NatGatewayEIP

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnet
      Tags:
      - Key: Name
        Value: NatGateway

  PublicRouteTableRouteA:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref DemoIGW
      RouteTableId: !Ref PublicRouteTable
  
  PrivateRouteTableRouteA:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway
      RouteTableId: !Ref PrivateRouteTable
  
  SecurityGroupEC2SSHPublic:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "EC2 SSH Public"
      VpcId: !Ref MatetrMostVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref SSHLocation

  SecurityGroupEC2SSHPublicPrivate:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "EC2 SSH Public Private"
      VpcId: !Ref MatetrMostVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 10.1.0.0/16

  SecurityGroupMySql:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref MatetrMostVPC
      GroupDescription: "EC2 MySQl"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 3306
        ToPort: 3306
        CidrIp: 10.1.0.0/16
  
  SecurityGroupMatterMostWebserver:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref MatetrMostVPC
      GroupDescription: "EC2 MatterMostWebserver"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 8065
        ToPort: 8065
        CidrIp: 0.0.0.0/0
  
  EC2InstanceBastionHost:
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: ami-02fe94dee086c0c37
      InstanceType: t2.micro
      SubnetId: !Ref PublicSubnet
      KeyName: !Ref SSHKey
      SecurityGroupIds:
      - Ref: SecurityGroupEC2SSHPublic
      - Ref: SecurityGroupMatterMostWebserver
      Tags:
      - Key: Name
        Value: BastionHost

  EC2InstanceMySql:
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: ami-02fe94dee086c0c37
      InstanceType: t2.micro
      SecurityGroupIds:
      - Ref: SecurityGroupEC2SSHPublicPrivate
      - Ref: SecurityGroupMySql
      KeyName: !Ref SSHKey
      SubnetId: !Ref PrivateSubnet
      Tags:
      - Key: Name
        Value: MySql
